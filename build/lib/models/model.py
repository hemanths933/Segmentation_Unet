# -*- coding: utf-8 -*-
"""Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BjyqB7FXCYO1LTeijBGq_-G96VmeUPrg
"""

from abc import abstractproperty,abstractmethod,ABC
import tensorflow as tf
import numpy as np
from tensorflow.python.keras import layers

class Model(ABC):
  
  
  def __init__(self):
    print("Model init")
    
  @abstractmethod
  def network(images):
    pass
  
  def train(self):
    print("Model train")
    prediction = self.network(self.train_data)
    loss = self.loss(actual_output,prediction) #loss must have softmax included with the loss function
    optimizer = self.optimizer()
    optimize = optimizer.minimize(loss)
    
  def test(self):
    print("Model test")
    prediction = self.network(self.test_data)
    loss = self.loss(actual_output,prediction) #loss must have softmax included with the loss function
    optimizer = self.optimizer()
    optimize = optimizer.minimize(loss)
    
  def evaluate(self):
    print("Model evaluate")
#     metric.calculate(y_hat_test,label_y_hat_test)
